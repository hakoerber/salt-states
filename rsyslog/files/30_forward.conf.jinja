{% from 'states/rsyslog/map.jinja' import rsyslog as rsyslog_map with context %}
{% if servers|length != 0 %}
template(name="syslog-json" type="list") {
    constant(value="{")
      constant(value="\"logtype\":\"")          constant(value="syslog")
      constant(value="\",\"content\":{")
        constant(value="\"@timestamp\":\"")     property(name="timegenerated" dateFormat="rfc3339" format="json")
        constant(value="\",\"host\":\"")        property(name="hostname" format="json")
        constant(value="\",\"severity\":\"")    property(name="syslogseverity-text" format="json")
        constant(value="\",\"facility\":\"")    property(name="syslogfacility-text" format="json")
        constant(value="\",\"tag\":\"")         property(name="syslogtag" format="json")
        constant(value="\",\"message\":\"")     property(name="msg" format="json")
        constant(value="\",\"program\":\"")     property(name="programname" format="json")
      constant(value="\"}")
      constant(value=",\"hostinfo\":{")
        constant(value="\"hostname\":\"")       property(name="$myhostname" format="json")
      constant(value="\"}")
    constant(value="}")
}
{% for server in servers %}
{% for listener in server.listeners %}

action(
  name="send_syslog"
  type="omfwd"
  Template="syslog-json"
  Target="{{ server.name + "." + server.domain }}"
  Port="{{ listener.port }}"
  Protocol="{{ listener.protocol }}"
)
{% endfor %}
{% endfor %}
{% endif %}

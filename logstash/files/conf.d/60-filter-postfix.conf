filter {
    if [syslog][program] == "postfix" {
        mutate {
            add_field => { "application" => "postfix" }
        }
        # grok log lines by program name (listed alpabetically)
        if [syslog][tag] =~ /^postfix.*\/anvil.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_ANVIL}" ]
                tag_on_failure => [ "_grok_postfix_anvil_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/bounce.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_BOUNCE}" ]
                tag_on_failure => [ "_grok_postfix_bounce_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/cleanup.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_CLEANUP}" ]
                tag_on_failure => [ "_grok_postfix_cleanup_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/dnsblog.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_DNSBLOG}" ]
                tag_on_failure => [ "_grok_postfix_dnsblog_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/local.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_LOCAL}" ]
                tag_on_failure => [ "_grok_postfix_local_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/master.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_MASTER}" ]
                tag_on_failure => [ "_grok_postfix_master_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/pickup.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_PICKUP}" ]
                tag_on_failure => [ "_grok_postfix_pickup_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/pipe.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_PIPE}" ]
                tag_on_failure => [ "_grok_postfix_pipe_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/postdrop.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_POSTDROP}" ]
                tag_on_failure => [ "_grok_postfix_postdrop_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/postscreen.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_POSTSCREEN}" ]
                tag_on_failure => [ "_grok_postfix_postscreen_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/qmgr.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_QMGR}" ]
                tag_on_failure => [ "_grok_postfix_qmgr_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/scache.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_SCACHE}" ]
                tag_on_failure => [ "_grok_postfix_scache_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/sendmail.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_SENDMAIL}" ]
                tag_on_failure => [ "_grok_postfix_sendmail_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/smtpd.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_SMTPD}" ]
                tag_on_failure => [ "_grok_postfix_smtpd_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/smtp.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_SMTP}" ]
                tag_on_failure => [ "_grok_postfix_smtp_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/lmtp.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_LMTP}" ]
                tag_on_failure => [ "_grok_postfix_lmtp_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/tlsmgr.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_TLSMGR}" ]
                tag_on_failure => [ "_grok_postfix_tlsmgr_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/tlsproxy.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_TLSPROXY}" ]
                tag_on_failure => [ "_grok_postfix_tlsproxy_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/trivial-rewrite.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_TRIVIAL_REWRITE}" ]
                tag_on_failure => [ "_grok_postfix_trivial_rewrite_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/discard.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_DISCARD}" ]
                tag_on_failure => [ "_grok_postfix_discard_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*\/virtual.*$/ {
            grok {
                patterns_dir   => "/etc/logstash/patterns.d"
                match          => [ "syslog[message]", "%{POSTFIX_VIRTUAL}" ]
                tag_on_failure => [ "_grok_postfix_virtual_nomatch" ]
                add_tag        => [ "_grok_postfix_success" ]
            }
        } else if [syslog][tag] =~ /^postfix.*/ {
            mutate {
                add_tag => [ "_grok_postfix_program_nomatch" ]
            }
        }

        # process key-value data is it exists
        if [postfix_keyvalue_data] {
            kv {
                source       => "postfix_keyvalue_data"
                trim         => "<>,"
                target       => "postfix"
                remove_field => [ "postfix_keyvalue_data" ]
            }

            # some post processing of key-value data
            if [postfix_client] {
                grok {
                    patterns_dir   => "/etc/logstash/patterns.d"
                    match          => ["postfix_client", "%{POSTFIX_CLIENT_INFO}"]
                    tag_on_failure => [ "_grok_kv_postfix_client_nomatch" ]
                    remove_field   => [ "postfix_client" ]
                }
            }
            if [postfix_relay] {
                grok {
                    patterns_dir   => "/etc/logstash/patterns.d"
                    match          => ["postfix_relay", "%{POSTFIX_RELAY_INFO}"]
                    tag_on_failure => [ "_grok_kv_postfix_relay_nomatch" ]
                    remove_field   => [ "postfix_relay" ]
                }
            }
            if [postfix_delays] {
                grok {
                    patterns_dir   => "/etc/logstash/patterns.d"
                    match          => ["postfix_delays", "%{POSTFIX_DELAYS}"]
                    tag_on_failure => [ "_grok_kv_postfix_delays_nomatch" ]
                    remove_field   => [ "postfix_delays" ]
                }
            }
        }

        # Do some data type conversions
        mutate {
            convert => [
                # list of integer fields
                "postfix_anvil_cache_size", "integer",
                "postfix_anvil_conn_count", "integer",
                "postfix_anvil_conn_rate", "integer",
                "postfix_client_port", "integer",
                "postfix_nrcpt", "integer",
                "postfix_postscreen_cache_dropped", "integer",
                "postfix_postscreen_cache_retained", "integer",
                "postfix_postscreen_dnsbl_rank", "integer",
                "postfix_relay_port", "integer",
                "postfix_server_port", "integer",
                "postfix_size", "integer",
                "postfix_status_code", "integer",
                "postfix_termination_signal", "integer",
                "postfix_uid", "integer",

                # list of float fields
                "postfix_delay", "float",
                "postfix_delay_before_qmgr", "float",
                "postfix_delay_conn_setup", "float",
                "postfix_delay_in_qmgr", "float",
                "postfix_delay_transmission", "float",
                "postfix_postscreen_violation_time", "float"
            ]
        }

        # move all postfix-specific stuff into own namespace
        mutate {
            rename => {
                "postfix_action" => "[postfix][action]"
                "postfix_anvil_cache_size" => "[postfix][anvil_cache_size]"
                "postfix_anvil_conn_count" => "[postfix][anvil_conn_count]"
                "postfix_anvil_conn_period" => "[postfix][anvil_conn_period]"
                "postfix_anvil_conn_rate" => "[postfix][anvil_conn_rate]"
                "postfix_anvil_timestamp" => "[postfix][anvil_timestamp]"
                "postfix_bounce_queueid" => "[postfix][bounce_queueid]"
                "postfix_client_hostname" => "[postfix][client_hostname]"
                "postfix_client_ip" => "[postfix][client_ip]"
                "postfix_client_port" => "[postfix][client_port]"
                "postfix_config_path" => "[postfix][config_path]"
                "postfix_delay_before_qmgr" => "[postfix][delay_before_qmgr]"
                "postfix_delay_conn_setup" => "[postfix][delay_conn_setup]"
                "postfix_delay_in_qmgr" => "[postfix][delay_in_qmgr]"
                "postfix_delay_transmission" => "[postfix][delay_transmission]"
                "postfix_dnsbl_domain" => "[postfix][dnsbl_domain]"
                "postfix_dnsbl_result" => "[postfix][dnsbl_result]"
                "postfix_from" => "[postfix][from]"
                "postfix_keyvalue_data" => "[postfix][keyvalue_data]"
                "postfix_milter_data" => "[postfix][milter_data]"
                "postfix_milter_message" => "[postfix][milter_message]"
                "postfix_milter_result" => "[postfix][milter_result]"
                "postfix_pipe_service" => "[postfix][pipe_service]"
                "postfix_postscreen_access" => "[postfix][postscreen_access]"
                "postfix_postscreen_cache_dropped" => "[postfix][postscreen_cache_dropped]"
                "postfix_postscreen_cache_retained" => "[postfix][postscreen_cache_retained]"
                "postfix_postscreen_dnsbl_rank" => "[postfix][postscreen_dnsbl_rank]"
                "postfix_postscreen_toobusy_data" => "[postfix][postscreen_toobusy_data]"
                "postfix_postscreen_violation" => "[postfix][postscreen_violation]"
                "postfix_postscreen_violation_time" => "[postfix][postscreen_violation_time]"
                "postfix_proxy_message" => "[postfix][proxy_message]"
                "postfix_proxy_result" => "[postfix][proxy_result]"
                "postfix_proxy_smtp_stage" => "[postfix][proxy_smtp_stage]"
                "postfix_proxy_status_code" => "[postfix][proxy_status_code]"
                "postfix_proxy_status_code_enhanced" => "[postfix][proxy_status_code_enhanced]"
                "postfix_queueid" => "[postfix][queueid]"
                "postfix_relay_hostname" => "[postfix][relay_hostname]"
                "postfix_relay_ip" => "[postfix][relay_ip]"
                "postfix_relay_port" => "[postfix][relay_port]"
                "postfix_relay_service" => "[postfix][relay_service]"
                "postfix_scache_addresses" => "[postfix][scache_addresses]"
                "postfix_scache_connection" => "[postfix][scache_connection]"
                "postfix_scache_domains" => "[postfix][scache_domains]"
                "postfix_scache_hits" => "[postfix][scache_hits]"
                "postfix_scache_miss" => "[postfix][scache_miss]"
                "postfix_scache_success" => "[postfix][scache_success]"
                "postfix_scache_timestamp" => "[postfix][scache_timestamp]"
                "postfix_server_ip" => "[postfix][server_ip]"
                "postfix_server_port" => "[postfix][server_port]"
                "postfix_service" => "[postfix][service]"
                "postfix_smtpd_lostconn_data" => "[postfix][smtpd_lostconn_data]"
                "postfix_smtp_response" => "[postfix][smtp_response]"
                "postfix_smtp_stage" => "[postfix][smtp_stage]"
                "postfix_status" => "[postfix][status]"
                "postfix_status_code" => "[postfix][status_code]"
                "postfix_status_code_enhanced" => "[postfix][status_code_enhanced]"
                "postfix_status_data" => "[postfix][status_data]"
                "postfix_status_message" => "[postfix][status_message]"
                "postfix_termination_signal" => "[postfix][termination_signal]"
                "postfix_tls_cipher" => "[postfix][tls_cipher]"
                "postfix_tls_cipher_size" => "[postfix][tls_cipher_size]"
                "postfix_tls_version" => "[postfix][tls_version]"
                "postfix_to" => "[postfix][to]"
                "postfix_version" => "[postfix][version]"
                "postfix_warning" => "[postfix][warning]"
            }
        }
    }
}
